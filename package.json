{
	"name": "run-commands-view",
	"displayName": "Run Commands View",
	"description": "Run commands from its own view",
	"version": "0.4.1",
	"publisher": "usernamehw",
	"license": "MIT",
	"engines": {
		"vscode": "^1.51.0"
	},
	"icon": "img/icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/usernamehw/vscode-run-commands-view"
	},
	"galleryBanner": {
		"theme": "dark",
		"color": "#333333"
	},
	"bugs": {
		"url": "https://github.com/usernamehw/vscode-run-commands-view/issues"
	},
	"keywords": [
		"run",
		"commands",
		"tree-view",
		"multiple",
		"macro",
		"hierarchy",
		"toggle",
		"settings",
		"delay"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Run Commands View",
			"properties": {
				"run-commands-view.commands": {
					"type": "object",
					"description": "Commands that will be rendered in the View.",
					"patternProperties": {
						"^.*$": {
							"anyOf": [
								{
									"type": "string",
									"description": "Name of the command to execute."
								},
								{
									"type": "array",
									"description": "List of commands(string or object) that will be executed one after another.",
									"items": {
										"oneOf": [
											{
												"type": "string",
												"description": "Name of the command to execute."
											},
											{
												"type": "object",
												"properties": {
													"command": {
														"type": "string",
														"description": "Name of the command to execute."
													},
													"delayBefore": {
														"type": "number",
														"description": "Delay (in ms) before executing the command."
													},
													"args": {
														"description": "Arguments to pass to the command to execute."
													}
												},
												"additionalProperties": false
											}
										]
									}
								},
								{
									"type": "object",
									"description": "This item cannot execute commands. It's purpose is to be a `folder` and contain nested items.",
									"properties": {
										"items": {
											"type": "object",
											"description": "Nested commands that will be rendered in the View.",
											"patternProperties": {
												"^.*$": {
													"anyOf": [
														{
															"type": "string",
															"description": "Name of the command to execute."
														},
														{
															"type": "array",
															"description": "List of commands(string or object) that will be executed one after another.",
															"items": {
																"oneOf": [
																	{
																		"type": "string",
																		"description": "Name of the command to execute."
																	},
																	{
																		"type": "object",
																		"properties": {
																			"command": {
																				"type": "string",
																				"description": "Name of the command to execute."
																			},
																			"delayBefore": {
																				"type": "number",
																				"description": "Delay (in ms) before executing the command."
																			},
																			"args": {
																				"description": "Arguments to pass to the command to execute."
																			}
																		},
																		"additionalProperties": false
																	}
																]
															}
														},
														{
															"type": "object",
															"description": "This item cannot execute commands. It's purpose is to be a `folder` and contain nested items.",
															"properties": {
																"items": {
																	"type": "object",
																	"description": "Nested items. TODO: add 3rd lvl support"
																}
															},
															"additionalProperties": false
														},
														{
															"type": "object",
															"properties": {
																"command": {
																	"type": "string",
																	"description": "Name of the command to execute."
																},
																"delayBefore": {
																	"type": "number",
																	"description": "Delay (in ms) before executing the command."
																},
																"args": {
																	"description": "Arguments to pass to the command to execute."
																}
															},
															"additionalProperties": false
														},
														{
															"type": "object",
															"description": "Execute multiple commands.",
															"properties": {
																"sequence": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"type": "string",
																				"description": "Name of the command to execute."
																			},
																			{
																				"type": "object",
																				"properties": {
																					"command": {
																						"type": "string",
																						"description": "Name of the command to execute."
																					},
																					"delayBefore": {
																						"type": "number",
																						"description": "Delay (in ms) before executing the command."
																					},
																					"args": {
																						"description": "Arguments to pass to the command to execute."
																					}
																				},
																				"additionalProperties": false
																			}
																		]
																	},
																	"description": "List of commands(string or object) that will be executed one after another."
																},
																"registerId": {
																	"type": "string",
																	"description": "Register sequence of commands to be able to invoke it with a single keybinding."
																},
																"excludeFromView": {
																	"type": "boolean",
																	"default": false,
																	"description": "Don't show this item in the View."
																}
															},
															"additionalProperties": false
														}
													]
												}
											},
											"default": {}
										}
									},
									"additionalProperties": false
								},
								{
									"type": "object",
									"properties": {
										"command": {
											"type": "string",
											"description": "Name of the command to execute."
										},
										"delayBefore": {
											"type": "number",
											"description": "Delay (in ms) before executing the command."
										},
										"args": {
											"description": "Arguments to pass to the command to execute."
										}
									},
									"additionalProperties": false
								},
								{
									"type": "object",
									"description": "Execute multiple commands.",
									"properties": {
										"sequence": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"type": "string",
														"description": "Name of the command to execute."
													},
													{
														"type": "object",
														"properties": {
															"command": {
																"type": "string",
																"description": "Name of the command to execute."
															},
															"delayBefore": {
																"type": "number",
																"description": "Delay (in ms) before executing the command."
															},
															"args": {
																"description": "Arguments to pass to the command to execute."
															}
														},
														"additionalProperties": false
													}
												]
											},
											"description": "List of commands(string or object) that will be executed one after another."
										},
										"registerId": {
											"type": "string",
											"description": "Register sequence of commands to be able to invoke it with a single keybinding."
										},
										"excludeFromView": {
											"type": "boolean",
											"default": false,
											"description": "Don't show this item in the View."
										}
									},
									"additionalProperties": false
								}
							]
						}
					},
					"default": {}
				},
				"run-commands-view.collapseFoldersByDefault": {
					"type": "boolean",
					"description": "Requires reload before being applied.",
					"default": false
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "run-commands",
					"icon": "./img/activity_bar_icon.svg",
					"title": "Run Commands"
				}
			]
		},
		"views": {
			"run-commands": [
				{
					"id": "run-commands-view.tree",
					"name": "View"
				}
			]
		},
		"commands": [
			{
				"command": "run-commands-view.runCommand",
				"title": "Run",
				"category": "Run Commands View"
			},
			{
				"command": "run-commands-view.revealCommand",
				"title": "Reveal in Settings",
				"category": "Run Commands View"
			},
			{
				"command": "run-commands-view.openAsQuickPick",
				"title": "Open as Quick Pick",
				"category": "Run Commands View"
			},
			{
				"command": "openFolder",
				"title": "Open Folder"
			}
		],
		"menus": {
			"view/item/context": [
				{
					"command": "run-commands-view.revealCommand",
					"when": "view == run-commands-view.tree && viewItem == command"
				}
			]
		},
		"commandPalette": [
			{
				"command": "openFolder",
				"when": "never"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production --colors",
		"compile": "webpack --mode development",
		"watch": "webpack --mode development --watch --display=minimal"
	},
	"devDependencies": {
		"@types/lodash": "^4.14.165",
		"@types/node": "^12.12.54",
		"@types/vscode": "^1.51.0",
		"@typescript-eslint/eslint-plugin": "^4.6.1",
		"@typescript-eslint/parser": "^4.6.1",
		"eslint": "^7.12.1",
		"eslint-plugin-no-autofix": "^1.0.1",
		"friendly-errors-webpack-plugin": "^1.7.0",
		"ts-loader": "^8.0.9",
		"typescript": "^4.0.5",
		"webpack": "^4.44.2",
		"webpack-cli": "^3.3.12"
	},
	"dependencies": {
		"lodash": "^4.17.20"
	}
}
